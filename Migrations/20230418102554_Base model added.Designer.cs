// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaOrderWebApi.Models;

#nullable disable

namespace PizzaOrderWebApi.Migrations
{
    [DbContext(typeof(PizzaOrderDbContext))]
    [Migration("20230418102554_Base model added")]
    partial class Basemodeladded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PizzaOrderWebApi.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Email = "User1@gmail.com",
                            Name = "User1",
                            PhoneNumber = "91"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave",
                            Email = "User2@gmail.comm",
                            Name = "User2",
                            PhoneNumber = "91"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Elm St",
                            Email = "User3@gmail.com",
                            Name = "User3",
                            PhoneNumber = "91"
                        });
                });

            modelBuilder.Entity("PizzaOrderWebApi.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Mozzarella cheese and tomato sauce",
                            Name = "Cheese",
                            Price = 10.99m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Mozzarella cheese, tomato sauce, and pepperoni",
                            Name = "Pepperoni",
                            Price = 12.99m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Mozzarella cheese, tomato sauce, pepperoni, sausage, onions, peppers, and mushrooms",
                            Name = "Supreme",
                            Price = 15.99m
                        });
                });

            modelBuilder.Entity("PizzaOrderWebApi.Models.PizzaOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Toppings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaOrders");
                });

            modelBuilder.Entity("PizzaOrderWebApi.Models.PizzaOrder", b =>
                {
                    b.HasOne("PizzaOrderWebApi.Models.Customer", "Customer")
                        .WithMany("PizzaOrders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaOrderWebApi.Models.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("PizzaOrderWebApi.Models.Customer", b =>
                {
                    b.Navigation("PizzaOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
